% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{density_asymmetry_discrete}
\alias{density_asymmetry_discrete}
\title{Compute asymmetry in discrete weighted probability density}
\usage{
density_asymmetry_discrete(
  dt,
  yvar = "bias_to_distr_corr",
  circ_space = 180,
  kernel_bw = NULL,
  by = c(),
  n = 181,
  average = T,
  return_full_density = F
)
}
\arguments{
\item{dt}{data.table with the data.}

\item{yvar}{Y-axis variable, normally errors (default: "bias_to_distr_corr").}

\item{circ_space}{Circular space, which can be 180 or 360 (default: 180).}

\item{kernel_bw}{Bandwidth for the kernel density estimator across \code{yvar}. If NULL, it is computed using \code{\link[stats:bandwidth]{stats::bw.SJ()}} (default: NULL).}

\item{by}{A vector of grouping variable names (default: an empty vector).}

\item{n}{The number of steps for the density computation (default: 181).}

\item{average}{If TRUE, the asymmetry is averaged (default: TRUE).}

\item{return_full_density}{If TRUE, returns the full data.table with density computed at each point (default: FALSE).}
}
\value{
A data.table with the grouping variables and \code{delta} - the difference (asymmetry) in probability density for positive and negative values of \code{yvar}; or the full density data if \code{return_full_density} is TRUE.
}
\description{
This function calculates the asymmetry in the probability density of a given variable using kernel density estimation. Unlike \code{density_asymmetry}, it does not take an \code{xvar} and assumes that the asymmetry is calculated for the whole dataset or subsets defined by \code{by} (which could also include a discrete x variable if needed) .
}
\examples{

data(Pascucci_et_al_2019_data)
ex_data <- Pascucci_et_al_2019_data
ex_data[, err := angle_diff_180(reported, orientation)] # response errors
ex_data[, prev_ori := shift(orientation), by = observer] # orientation on previous trial

# determine the shift in orientations between trials
ex_data[, diff_in_ori := angle_diff_180(prev_ori, orientation)]
ex_data[, abs_diff_in_ori := abs(diff_in_ori)]
ex_data[, err_rel_to_prev_targ := ifelse(diff_in_ori < 0, -err, err)]
ex_data[, similarity_discrete := ifelse(abs_diff_in_ori>45, 'Dissimilar', 'Similar')]
err_dens_discrete <- density_asymmetry_discrete(ex_data[!is.na(err_rel_to_prev_targ)],
  circ_space = 180, yvar = "err_rel_to_prev_targ", by = c("observer","similarity_discrete")
)

ggplot(err_dens_discrete, aes(x = similarity_discrete, y = delta))+
geom_violin() + geom_point() +
  labs(y = "Asymmetry in error probability density, \%", x = "Previous target")

}
