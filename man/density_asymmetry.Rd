% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{density_asymmetry}
\alias{density_asymmetry}
\title{Compute asymmetry in weighted probability density}
\usage{
density_asymmetry(
  dt,
  circ_space = 180,
  weights_sd = 10,
  kernel_bw = NULL,
  xvar = "abs_td_dist",
  yvar = "bias_to_distr_corr",
  by = c(),
  n = 181,
  average = T,
  return_full_density = F
)
}
\arguments{
\item{dt}{data.table with the data.}

\item{circ_space}{Circular space, which can be 180 or 360 (default: 180).}

\item{weights_sd}{Standard deviation of the Gaussian window to use across \code{xvar} (default: 10).}

\item{kernel_bw}{Bandwidth for the kernel density estimator across \code{yvar}. If NULL, it is computed using \code{\link[stats:bandwidth]{stats::bw.SJ()}} (default: NULL).}

\item{xvar}{X-axis variable, such as dissimilarity between items (default: "abs_td_dist").}

\item{yvar}{Y-axis variable, normally errors (default: "bias_to_distr_corr").}

\item{by}{A vector of grouping variable names (default: an empty vector).}

\item{n}{The number of steps for the x-axis variable at which the density is computed (default: 181).}

\item{average}{If TRUE, the asymmetry is averaged for each x-value (default: TRUE).}

\item{return_full_density}{If TRUE, returns the full data.table with density computed at each point (default: FALSE).}
}
\value{
A data.table with the grouping variables, \code{dist} - the values of X-axis variable at which the density is computed, and \code{delta} - the difference (asymmetry) in probability density for positive and negative values of \code{yvar}; or the full density data if \code{return_full_density} is TRUE.
}
\description{
This function calculates the asymmetry in the probability density of a given variable (usually errors) relative to another variable (usually dissimilarity) using kernel density estimation. The asymmetry is computed for each x-axis value, and the result can be averaged or returned for each value individually.
}
\examples{

data(Pascucci_et_al_2019_data)
ex_data <- Pascucci_et_al_2019_data
ex_data[, err := angle_diff_180(reported, orientation)] # response errors
ex_data[, prev_ori := shift(orientation), by = observer] # orientation on previous trial

# determine the shift in orientations between trials
ex_data[, diff_in_ori := angle_diff_180(prev_ori, orientation)]
ex_data[, abs_diff_in_ori := abs(diff_in_ori)]
ex_data[, err_rel_to_prev_targ := ifelse(diff_in_ori < 0, -err, err)]

err_dens <- density_asymmetry(ex_data[!is.na(err_rel_to_prev_targ)],
  circ_space = 180, weights_sd = 10, xvar = "abs_diff_in_ori",
  yvar = "err_rel_to_prev_targ", by = c("observer")
)

ggplot(err_dens, aes(x = dist, y = delta)) +
  geom_line(stat = "summary", fun = mean) +
  labs(y = "Asymmetry in error probability density, \%", x = "Absolute orientation difference, Â°")

}
