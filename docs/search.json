[{"path":"https://achetverikov.github.io/circhelp/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrey Chetverikov. Author, maintainer. Eline Van Geert. Contributor.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chetverikov (2025). circhelp: Circular Analyses Helper Functions. R package version 1.1.2, https://achetverikov.github.io/circhelp/index.html.","code":"@Manual{,   title = {circhelp: Circular Analyses Helper Functions},   author = {Andrey Chetverikov},   year = {2025},   note = {R package version 1.1.2},   url = {https://achetverikov.github.io/circhelp/index.html}, }"},{"path":[]},{"path":"https://achetverikov.github.io/circhelp/index.html/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/index.html","id":"circhelp","dir":"","previous_headings":"","what":"Circular Analyses Helper Functions","title":"Circular Analyses Helper Functions","text":"circhelp small helper package circular data analyses R, particularly useful cognitive studies orientation, motion direction, circular features. package contains functions descriptive statistics circular data (computing means, SD, skewness), angular differences, correlation. also includes function correct cardinal biases human estimates circular features (e.g., orientation). documentation available package help files https://achetverikov.github.io/circhelp/.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Circular Analyses Helper Functions","text":"can install latest released version CRAN : current developmental version GitHub can installed :","code":"install.packages(\"circhelp\") # install.packages(\"devtools\") devtools::install_github(\"achetverikov/circhelp\")"},{"path":"https://achetverikov.github.io/circhelp/index.html/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Circular Analyses Helper Functions","text":"functions self-explanatory. (somewhat) complicated function remove_cardinal_biases, see help files vignette example use case.","code":"library(circhelp) #> Loading required package: data.table #> Loading required package: ggplot2 library(mgcv) #> Loading required package: nlme #> This is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'. # compute a set of descriptive statistics x <- rnorm(500) circ_descr(x) #> $mu #> [1] 0.02023446 #>  #> $sigma #> [1] 0.9415005 #>  #> $skew_pewsey #> [1] 0.01683586 #>  #> $skew_fischer #> [1] 0.0473933 #>  #> $rho #> [1] 0.6419714 #>  #> $skew_rel_to_zero #> [1] 0.02349117  # compute difference in orientations a <- 5 b <- 170 angle_diff_180(a, b) #> [1] 15  # compute difference in 360° space (e.g., motion directions) angle_diff_360(a, b) #> [1] -165  # compute correlation between angles data <- rmvn(10000, c(0, 0), V = matrix(c(1, 0.5, 0.5, 1), ncol = 2)) circ_corr(data[, 1], data[, 2]) #> [1] 0.4269736"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/get_boundary_preds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get polynomial predictions for values at the boundaries — get_boundary_preds","title":"Get polynomial predictions for values at the boundaries — get_boundary_preds","text":"helper function remove_cardinal_biases().","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/get_boundary_preds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get polynomial predictions for values at the boundaries — get_boundary_preds","text":"","code":"get_boundary_preds(   group,   data,   space,   reassign_range,   gam_ctrl,   poly_deg,   angle_diff_fun,   weights = NULL )"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/get_boundary_preds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get polynomial predictions for values at the boundaries — get_boundary_preds","text":"group group (bin) id data dataset space see remove_cardinal_biases() reassign_range see remove_cardinal_biases() gam_ctrl control object gam models poly_deg see remove_cardinal_biases() angle_diff_fun function compute difference angles","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/get_boundary_preds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get polynomial predictions for values at the boundaries — get_boundary_preds","text":"data.table predicted values","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Pascucci_et_al_2019_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from an orientation estimation task — Pascucci_et_al_2019_data","title":"Data from an orientation estimation task — Pascucci_et_al_2019_data","text":"dataset orientation estimation results Experiment 2 Pascucci et al. (2019) available https://doi.org/10.5281/zenodo.2544946.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Pascucci_et_al_2019_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from an orientation estimation task — Pascucci_et_al_2019_data","text":"","code":"Pascucci_et_al_2019_data"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Pascucci_et_al_2019_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from an orientation estimation task — Pascucci_et_al_2019_data","text":"data frame 4400 rows 5 variables: observer observer ID orientation true orientation reported reported orientation rt response time err estimation error","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Pascucci_et_al_2019_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from an orientation estimation task — Pascucci_et_al_2019_data","text":"https://zenodo.org/record/2544946/files/Experiment2_rawdata.csv?download=1","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Pascucci_et_al_2019_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from an orientation estimation task — Pascucci_et_al_2019_data","text":"Pascucci, D., Mancuso, G., Santandrea, E., Libera, C. D., Plomp, G., & Chelazzi, L. (2019). Laws concatenated perception: Vision goes novelty, decisions perseverance. PLoS Biology, 17(3). doi:10.1371/journal.pbio.3000144","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Bae_Luck_2018_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from a motion estimation task — Bae_Luck_2018_data","title":"Data from a motion estimation task — Bae_Luck_2018_data","text":"dataset motion estimation results Bae & Luck (2018) available https://osf.io/4m2kb/ (variables removed, see link full dataset).","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Bae_Luck_2018_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from a motion estimation task — Bae_Luck_2018_data","text":"","code":"Bae_Luck_2018_data"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Bae_Luck_2018_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from a motion estimation task — Bae_Luck_2018_data","text":"data frame 20480 rows 8 variables: subject_Num observer ID trial_Num trial number TargetDirection true motion direction RespAngle reported motion direction motionCoh motion coherence Block block number Session session number err estimation error","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Bae_Luck_2018_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from a motion estimation task — Bae_Luck_2018_data","text":"https://osf.io/4m2kb/download","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/Bae_Luck_2018_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from a motion estimation task — Bae_Luck_2018_data","text":"Bae, G.-Y., & Luck, S. J. (2018). Decoding motion direction using topography sustained ERPs alpha oscillations. NeuroImage, 184(August 2018), 242-255. doi:10.1016/J.NEUROIMAGE.2018.09.029","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cardinal biases — remove_cardinal_biases","title":"Remove cardinal biases — remove_cardinal_biases","text":"Remove cardinal biases","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cardinal biases — remove_cardinal_biases","text":"","code":"remove_cardinal_biases(   err,   x,   space = \"180\",   bias_type = \"fit\",   plots = \"hide\",   poly_deg = 4,   var_sigma = TRUE,   var_sigma_poly_deg = 4,   reassign_at_boundaries = TRUE,   reassign_range = 2,   break_points = NULL,   init_outliers = NULL,   debug = FALSE,   do_plots = NULL )"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cardinal biases — remove_cardinal_biases","text":"err vector errors, deviations response true stimuli x vector true stimuli degrees (see space) space circular space use (string: 180 360) bias_type bias type use (fit, card, obl, custom, see details) plots string hide, show, return hide, show, return plots (default: hide) poly_deg degree fitted polynomials bin (default: 4) var_sigma allow standard deviation (width) fitted response distribution vary function distance nearest cardinal (default: True) var_sigma_poly_deg degree fitted polynomials bin first approximation response distribution select best fitting model (default: 4) reassign_at_boundaries select bin observations boundaries bins based best-fitting polynomial (default: True) reassign_range maximum distance boundary reassignment can occur (default: 2 degrees) break_points can used assign custom break points instead cardinal/oblique ones bias_type set custom (default: NULL) init_outliers vector determining errors initially assumed outliers (default: NULL) debug print extra info (default: False) do_plots deprecated, use parameter plots instead","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove cardinal biases — remove_cardinal_biases","text":"plots=='return', returns three plots showing biases (combined together patchwork::wrap_plots()). Otherwise, returns list following elements: is_outlier - 0 outliers (defined ±3*pred_sigma model varying sigma ±3\\*SD simple model) pred predicted error be_c error corrected biases (be_c = observed error - pred) which_bin numeric ID bin stimulus belong bias bias computed described bias_typ bias type (cardinal oblique) pred_lin predicted error simple linear model comparison pred_sigma predicted SD error distribution coef_sigma_int, coef_sigma_slope intercept slope sigma prediction","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove cardinal biases — remove_cardinal_biases","text":"bias_type set fit, function computes cardinal biases following way: Create two sets bins, splitting stimuli vector bins centered cardinal oblique directions. set bins, fit nth-degree polynomial responses bin, optionally allowing distribution responses vary width function distance nearest cardinal (regardless whether bins centered cardinal oblique, width response distribution usually increases distance cardinals increase). Choose best-fitting model one using cardinal one using oblique bins. Compute residuals best-fitting model - bias-corrected error - biases (see ). bias computed flipping sign errors average predicted error negative, , , example, average responses shifted clockwise relative true values, trial--trial error count bias also shifted clockwise. bias_type set obl card, one set bins used, centred cardinal oblique angles, respectively. additional examples see help vignette: vignette(\"cardinal_biases\", package = \"circhelp\")","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove cardinal biases — remove_cardinal_biases","text":"Chetverikov, ., & Jehee, J. F. M. (2023). Motion direction represented bimodal probability distribution human visual cortex. Nature Communications, 14(7634). doi:10.1038/s41467-023-43251-w van Bergen, R. S., Ma, W. J., Pratte, M. S., & Jehee, J. F. M. (2015). Sensory uncertainty decoded visual cortex predicts behavior. Nature Neuroscience, 18(12), 1728-1730. doi:10.1038/nn.4150","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove cardinal biases — remove_cardinal_biases","text":"","code":"# Data in orientation domain from Pascucci et al. (2019, PLOS Bio), # https://doi.org/10.5281/zenodo.2544946  ex_data <- Pascucci_et_al_2019_data[observer == 4, ] remove_cardinal_biases(ex_data$err, ex_data$orientation, plots = \"show\")  #>      is_outlier       pred        be_c which_bin  bias bias_type    pred_lin #>           <num>      <num>       <num>     <num> <num>    <char>       <num> #>   1:          0  7.9231406  -4.9231406         2     3       obl   7.7417971 #>   2:          0 -0.1308394   1.1308394         2    -1       obl  -0.3993174 #>   3:          0  1.2207704  -4.2207704         2    -3       obl   0.6511490 #>   4:          0 -8.7810566  10.7810566         1    -2       obl  -9.8423470 #>   5:          0 -8.6973985   0.6973985         2     8       obl  -6.1768825 #>  ---                                                                         #> 436:          0 -2.1183875   1.1183875         1     1       obl  -1.2501447 #> 437:          0 -8.6734938 -10.3265062         2    19       obl -11.1665978 #> 438:          1 -7.5719139  21.5719139         2   -14       obl  -5.3890327 #> 439:          0  1.5455219  -2.5455219         2    -1       obl   0.9137656 #> 440:          0 -1.5454397   0.5454397         2     1       obl  -1.4497838 #>      pred_sigma coef_sigma_int coef_sigma_slope shifted_x total_log_lik #>           <num>          <num>            <num>     <num>         <num> #>   1:   6.581614       2.008436    -0.0041385327        15     -1439.084 #>   2:   7.420878       2.008436    -0.0041385327        46     -1439.084 #>   3:   7.359709       2.008436    -0.0041385327        42     -1439.084 #>   4:   6.048106       1.835112    -0.0009307184        -7     -1439.084 #>   5:   6.775070       2.008436    -0.0041385327        68     -1439.084 #>  ---                                                                    #> 436:   6.202017       1.835112    -0.0009307184       -34     -1439.084 #> 437:   6.262739       2.008436    -0.0041385327        87     -1439.084 #> 438:   6.859711       2.008436    -0.0041385327        65     -1439.084 #> 439:   7.329313       2.008436    -0.0041385327        41     -1439.084 #> 440:   7.299043       2.008436    -0.0041385327        50     -1439.084  # Data in motion domain from Bae & Luck (2018, Neuroimage), # https://osf.io/2h6w9/ ex_data_bae <- Bae_Luck_2018_data[subject_Num == unique(subject_Num)[5], ] remove_cardinal_biases(ex_data_bae$err, ex_data_bae$TargetDirection,   space = \"360\", plots = \"show\" )  #>       is_outlier       pred        be_c which_bin    bias bias_type    pred_lin #>            <num>      <num>       <num>     <num>   <num>    <char>       <num> #>    1:          1  -8.170082  177.570082         4 -169.40       obl  -4.9493375 #>    2:          0  -4.274308   -1.725692         4    6.00       obl  -3.4904611 #>    3:          1  -1.536582  179.086582         4 -177.55       obl  -2.3017470 #>    4:          0  -8.127875  -32.872125         4   41.00       obl  -5.5977270 #>    5:          1 -12.621761 -162.328239         3  174.95       obl -10.0644723 #>   ---                                                                           #> 1276:          0  -3.467410   -2.532590         3    6.00       obl  -3.1784946 #> 1277:          0  -0.857953    2.857953         2   -2.00       obl  -0.9756321 #> 1278:          0  -1.282251  -12.017749         2   13.30       obl  -2.8733208 #> 1279:          0  -2.482519    9.482519         4   -7.00       obl  -2.7340066 #> 1280:          1   5.470358 -181.670358         1 -176.20       obl  10.9248285 #>       pred_sigma coef_sigma_int coef_sigma_slope shifted_x total_log_lik #>            <num>          <num>            <num>     <num>         <num> #>    1:   13.29616       2.556561     0.0034349606     234.0     -4999.393 #>    2:   13.71362       2.556561     0.0034349606     207.0     -4999.393 #>    3:   14.79011       2.556561     0.0034349606     185.0     -4999.393 #>    4:   13.85567       2.556561     0.0034349606     246.0     -4999.393 #>    5:   15.11852       2.757918    -0.0009766969     178.0     -4999.393 #>   ---                                                                    #> 1276:   15.50735       2.757918    -0.0009766969     152.0     -4999.393 #> 1277:   27.85360       3.482895    -0.0219623385      52.1     -4999.393 #> 1278:   13.37544       3.482895    -0.0219623385      85.5     -4999.393 #> 1279:   14.38922       2.556561     0.0034349606     193.0     -4999.393 #> 1280:   14.03739       3.163758    -0.0133854689     -84.0     -4999.393  # Using a stricter initial outlier boundary  remove_cardinal_biases(ex_data_bae$err, ex_data_bae$TargetDirection,   space = \"360\", plots = \"show\",   init_outliers = abs(ex_data_bae$err) > 60 )  #>       is_outlier       pred        be_c which_bin    bias bias_type  pred_lin #>            <num>      <num>       <num>     <num>   <num>    <char>     <num> #>    1:          1  -9.113946  178.513946         4 -169.40       obl -4.710449 #>    2:          0  -2.806203   -3.193797         4    6.00       obl -3.476563 #>    3:          1  -2.094947  179.644947         4 -177.55       obl -2.471175 #>    4:          1  -8.951250  -32.048750         4   41.00       obl -5.258842 #>    5:          1 -11.247061 -163.702939         3  174.95       obl -9.952609 #>   ---                                                                         #> 1276:          0  -4.297750   -1.702250         3    6.00       obl -3.147991 #> 1277:          0  -3.552364    5.552364         2   -2.00       obl -1.006986 #> 1278:          0  -1.312257  -11.987743         2   13.30       obl -3.046211 #> 1279:          0  -1.224265    8.224265         4   -7.00       obl -2.836771 #> 1280:          1   6.492975 -182.692975         1 -176.20       obl 11.762122 #>       pred_sigma coef_sigma_int coef_sigma_slope shifted_x total_log_lik #>            <num>          <num>            <num>     <num>         <num> #>    1:   9.563944       2.296165     -0.004240535     234.0     -4106.563 #>    2:   9.205815       2.296165     -0.004240535     207.0     -4106.563 #>    3:   8.385832       2.296165     -0.004240535     185.0     -4106.563 #>    4:   9.089444       2.296165     -0.004240535     246.0     -4106.563 #>    5:   9.677623       2.137990      0.003065721     178.0     -4106.563 #>   ---                                                                    #> 1276:   8.936174       2.137990      0.003065721     152.0     -4106.563 #> 1277:   7.358394       1.892981      0.014487437      52.1     -4106.563 #> 1278:  11.937946       1.892981      0.014487437      85.5     -4106.563 #> 1279:   8.675195       2.296165     -0.004240535     193.0     -4106.563 #> 1280:   7.510183       1.892083      0.003184029     -84.0     -4106.563  # We can also use just one bin by setting `bias_type` to custom # and setting the `break_points` at the ends of the range for x  remove_cardinal_biases(ex_data_bae$err, ex_data_bae$TargetDirection,   space = \"360\", bias_type = \"custom\",   break_points = c(-180, 180), plots = \"show\",   reassign_at_boundaries = FALSE, poly_deg = 8,   init_outliers = abs(ex_data_bae$err) > 60 )  #>       is_outlier       pred         be_c which_bin    bias bias_type   pred_lin #>            <num>      <num>        <num>     <num>   <num>    <char>      <num> #>    1:          1 -9.3547551  178.7547551         1 -169.40    custom -0.3342663 #>    2:          0 -2.5809200   -3.4190800         1    6.00    custom -0.3327065 #>    3:          1 -4.4192576  181.9692576         1 -177.55    custom -0.3314355 #>    4:          1 -9.5398446  -31.4601554         1   41.00    custom -0.3349595 #>    5:          1 -7.0169649 -167.9330351         1  174.95    custom -0.3310311 #>   ---                                                                           #> 1276:          0 -5.0038536   -0.9961464         1    6.00    custom -0.3295290 #> 1277:          0 -3.9178042    5.9178042         1   -2.00    custom -0.3237577 #> 1278:          0  0.6855594  -13.9855594         1  -13.30    custom -0.3256872 #> 1279:          0 -1.6660057    8.6660057         1   -7.00    custom -0.3318977 #> 1280:          1  4.0545242 -180.2545242         1 -176.20    custom -0.3366927 #>       pred_sigma coef_sigma_int coef_sigma_slope shifted_x total_log_lik #>            <num>          <num>            <num>     <num>         <num> #>    1:   8.778540       2.164489     0.0001448273    -126.0     -4139.606 #>    2:   8.744280       2.164489     0.0001448273    -153.0     -4139.606 #>    3:   8.716463       2.164489     0.0001448273    -175.0     -4139.606 #>    4:   8.793810       2.164489     0.0001448273    -114.0     -4139.606 #>    5:   8.712677       2.164489     0.0001448273    -182.0     -4139.606 #>   ---                                                                    #> 1276:   8.745546       2.164489     0.0001448273    -208.0     -4139.606 #> 1277:   8.872999       2.164489     0.0001448273    -307.9     -4139.606 #> 1278:   8.830182       2.164489     0.0001448273    -274.5     -4139.606 #> 1279:   8.726568       2.164489     0.0001448273    -167.0     -4139.606 #> 1280:   8.832100       2.164489     0.0001448273     -84.0     -4139.606"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/correct_angle_rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Get angle value in [-pi, pi] space — correct_angle_rad","title":"Get angle value in [-pi, pi] space — correct_angle_rad","text":"Get angle value [-pi, pi] space","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/correct_angle_rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get angle value in [-pi, pi] space — correct_angle_rad","text":"","code":"correct_angle_rad(x)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/correct_angle_rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get angle value in [-pi, pi] space — correct_angle_rad","text":"x angle","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/correct_angle_rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get angle value in [-pi, pi] space — correct_angle_rad","text":"angle [-pi, pi] space","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/correct_angle_rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get angle value in [-pi, pi] space — correct_angle_rad","text":"","code":"correct_angle_rad(4 * pi) #> [1] 0"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/make_plots_of_biases.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots biases using the data from remove_cardinal_biases — make_plots_of_biases","title":"Plots biases using the data from remove_cardinal_biases — make_plots_of_biases","text":"Plots biases using data remove_cardinal_biases","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/make_plots_of_biases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots biases using the data from remove_cardinal_biases — make_plots_of_biases","text":"","code":"make_plots_of_biases(data, poly_deg, sd_val)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/make_plots_of_biases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots biases using the data from remove_cardinal_biases — make_plots_of_biases","text":"data data prepared  remove_cardinal_biases poly_deg degree polynomial sd_val sd used determine outliers","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/make_plots_of_biases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots biases using the data from remove_cardinal_biases — make_plots_of_biases","text":"return anything","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/pad_circ.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad circular data on both ends — pad_circ","title":"Pad circular data on both ends — pad_circ","text":"Pad circular data ends","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/pad_circ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad circular data on both ends — pad_circ","text":"","code":"pad_circ(   data,   circ_var,   circ_borders = c(-90, 90),   circ_part = 1/6,   verbose = FALSE )"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/pad_circ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad circular data on both ends — pad_circ","text":"data data.table pad circ_var circular variable circ_borders range circular variable circ_part padding proportion verbose print extra info","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/pad_circ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad circular data on both ends — pad_circ","text":"padded data.table","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/pad_circ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pad circular data on both ends — pad_circ","text":"Pads data adding part data (default: 1/6th) one end another end. Useful roughly account circularity using non-circular methods.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/pad_circ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad circular data on both ends — pad_circ","text":"","code":"dt <- data.table::data.table(x = runif(1000, -90, 90), y = rnorm(1000)) pad_circ(dt, \"x\", verbose = TRUE) #> Rows in original DT: 1000, padded on the left: 175, padded on the right: 173 #>                x          y #>            <num>      <num> #>    1:   31.22061 -1.4047145 #>    2:  -23.17142  1.1017081 #>    3:   75.24191  0.6979863 #>    4:   32.03606 -0.8643498 #>    5:   29.72744 -1.0914704 #>   ---                       #> 1344: -101.57177 -1.6166640 #> 1345:  -94.32620  1.8609315 #> 1346: -100.64329  0.8450042 #> 1347: -106.32629  0.3922361 #> 1348: -111.77805 -0.2931074"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular-linear correlation — circ_lin_corr","title":"Circular-linear correlation — circ_lin_corr","text":"Implementation circular-linear correlation measure introduced Mardia (1976) Johnson Wehrly (1977) cited Jammalamadaka & Sengupta (2001).","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular-linear correlation — circ_lin_corr","text":"","code":"circ_lin_corr(circ_x, lin_x, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular-linear correlation — circ_lin_corr","text":"circ_x circular variable lin_x linear variable na.rm logical value indicating whether NA values removed computation proceeds","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular-linear correlation — circ_lin_corr","text":"circular-linear correlation measure","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Circular-linear correlation — circ_lin_corr","text":"measure computed \\[r^2 = (r_{xc}^2+r_{xs}^2-2 r_{xc} r_{xs}r_{cs})/(1-r_{cs}^2)\\] \\(r_{xc} = corr(x, cos(\\alpha))\\), \\(r_{xs} = corr(x, sin(\\alpha))\\), \\(r_{cs} = corr(cos(\\alpha), sin(\\alpha))\\), \\(\\alpha\\) \\(x\\) circular linear variables, respectively.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular-linear correlation — circ_lin_corr","text":"Jammalamadaka, S. R., & SenGupta, . (2001). Topics Circular Statistics. WORLD SCIENTIFIC. doi:10.1142/4031","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_lin_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular-linear correlation — circ_lin_corr","text":"","code":"x <- rnorm(50) a <- as.vector(circular::rvonmises(50, 0, 5)) #> Warning: an object is coerced to the class 'circular' using default value for the following components: #>   type: 'angles' #>   units: 'radians' #>   template: 'none' #>   modulo: 'asis' #>   zero: 0 #>   rotation: 'counter' #> conversion.circularmuradians0counter circ_lin_corr(x + a, x) #> [1] 0.8078176"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_descr.html","id":null,"dir":"Reference","previous_headings":"","what":"A set of descriptive statistics for circular data — circ_descr","title":"A set of descriptive statistics for circular data — circ_descr","text":"set descriptive statistics circular data","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_descr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A set of descriptive statistics for circular data — circ_descr","text":"","code":"circ_descr(x, w = NULL, d = NULL, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_descr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A set of descriptive statistics for circular data — circ_descr","text":"x vector angles w weights values vector d correction bias data known spacing na.rm logical value indicating whether NA values removed computation proceeds","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_descr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A set of descriptive statistics for circular data — circ_descr","text":"list descriptive statistics mu - mean sigma - standard deviation skew_pewsey - skewness defined Pewsey skew_fischer - skewness defined Fischer rho - mean resultant length skew_rel_to_zero - skewness relative zero","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_descr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A set of descriptive statistics for circular data — circ_descr","text":"","code":"x <- c(rnorm(50, 0, 0.5), rnorm(20, 1, 0.5)) circ_descr(x) #> $mu #> [1] 0.247662 #>  #> $sigma #> [1] 0.6127208 #>  #> $skew_pewsey #> [1] -0.0675159 #>  #> $skew_fischer #> [1] -4.222494 #>  #> $rho #> [1] 0.8288522 #>  #> $skew_rel_to_zero #> [1] 0.1801658 #>"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular correlation coefficient — circ_corr","title":"Circular correlation coefficient — circ_corr","text":"Computes circular correlation coefficient defined Jammalamadaka & SenGupta (2001).","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular correlation coefficient — circ_corr","text":"","code":"circ_corr(a, b, ill_defined = FALSE, mu = NULL, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular correlation coefficient — circ_corr","text":"first variable b second variable ill_defined one variables mean well-defined (e.g., uniformly distributed)? mu fix mean parameter vectors certain value na.rm logical value indicating whether NA values removed computation proceeds","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular correlation coefficient — circ_corr","text":"correlation coefficient","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_corr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular correlation coefficient — circ_corr","text":"Jammalamadaka, S. R., & SenGupta, . (2001). Topics Circular Statistics. WORLD SCIENTIFIC. doi:10.1142/4031","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular correlation coefficient — circ_corr","text":"","code":"requireNamespace(\"mgcv\") data <- mgcv::rmvn(10000, c(0, 0), V = matrix(c(1, 0.5, 0.5, 1), ncol = 2)) circ_corr(data[, 1], data[, 2]) #> [1] 0.4396678"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_sd_rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular standard deviation — circ_sd_rad","title":"Circular standard deviation — circ_sd_rad","text":"Circular standard deviation","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_sd_rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular standard deviation — circ_sd_rad","text":"","code":"circ_sd_rad(x, na.rm = FALSE)  circ_sd_360(x, na.rm = FALSE)  circ_sd_180(x, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_sd_rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular standard deviation — circ_sd_rad","text":"x vector angles na.rm logical value indicating whether NA values removed computation proceeds","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_sd_rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular standard deviation — circ_sd_rad","text":"standard deviation values vector","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_sd_rad.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Circular standard deviation — circ_sd_rad","text":"circ_sd_rad(): SD angles radians circ_sd_360(): SD angles 360 degree space circ_sd_180(): SD angles 180 degree space","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_sd_rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular standard deviation — circ_sd_rad","text":"","code":"circ_sd_rad(rnorm(50)) #> [1] 1.062068 circ_sd_180(rnorm(50)) #> [1] 0.8645974"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_circ_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted circular parameters — weighted_circ_mean","title":"Weighted circular parameters — weighted_circ_mean","text":"Weighted circular parameters","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_circ_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted circular parameters — weighted_circ_mean","text":"","code":"weighted_circ_mean(x, w, na.rm = FALSE)  weighted_circ_mean2(x, w, na.rm = FALSE)  weighted_circ_sd(x, w, na.rm = FALSE)  weighted_circ_rho(x, w, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_circ_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted circular parameters — weighted_circ_mean","text":"x vector values (radians) w vector weights na.rm logical value indicating whether NA values removed computation proceeds","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_circ_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted circular parameters — weighted_circ_mean","text":"weighted mean values vector","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_circ_mean.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Weighted circular parameters — weighted_circ_mean","text":"weighted_circ_mean(): weighted circular mean weighted_circ_mean2(): alternative way compute weighted circular mean (results ) weighted_circ_sd(): weighted circular SD weighted_circ_rho(): weighted mean resultant length","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_circ_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted circular parameters — weighted_circ_mean","text":"","code":"x <- rnorm(1000, 0, 0.5) w <- runif(1000, 0, 1) weighted.mean(x, w) #> [1] -0.008495478 weighted_circ_mean(x, w) #> [1] -0.009323728"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Differences between angles in different circular spaces — angle_diff_rad","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"Differences angles different circular spaces","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"","code":"angle_diff_rad(a, b)  angle_diff_360(a, b)  angle_diff_180(a, b)  angle_diff_90(a, b)  angle_diff_180_45(a, b)  angle_diff_360_90(a, b)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"first angle b second angle","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"difference b","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"default, functions return values ± half-range space (e.g., -pi pi 2pi radian space used angle_diff_rad()) angle_diff_180_45() angle_diff_360_90() return values [-1/4 range, 3/4 range] space","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"angle_diff_rad(): angle difference radians angle_diff_360(): angle difference 360 degree space angle_diff_180(): angle difference 180 degree space (e.g., line orientation) angle_diff_90(): angle difference 90 degree space angle_diff_180_45(): angle difference 180 degree space -45 135 angle_diff_360_90(): angle difference 360 degree space -90 270","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/angle_diff_rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differences between angles in different circular spaces — angle_diff_rad","text":"","code":"angle_diff_180(5, 175) #> [1] 10 angle_diff_360(5, 175) #> [1] -170 angle_diff_90(5, 175) #> [1] 10 angle_diff_rad(5, 175) #> [1] -0.3539967  angle_diff_360(300, 0) #> [1] -60 angle_diff_360_90(300, 0) #> [1] -60"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_mean_rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular mean — circ_mean_rad","title":"Circular mean — circ_mean_rad","text":"Circular mean","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_mean_rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular mean — circ_mean_rad","text":"","code":"circ_mean_rad(x, na.rm = FALSE)  circ_mean_180(x, na.rm = FALSE)  circ_mean_360(x, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_mean_rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular mean — circ_mean_rad","text":"x vector values na.rm logical value indicating whether NA values removed computation proceeds","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_mean_rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular mean — circ_mean_rad","text":"mean values vector","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_mean_rad.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Circular mean — circ_mean_rad","text":"circ_mean_rad(): circular mean 2pi space circ_mean_180(): circular mean 180° space (e.g., line orientation) circ_mean_360(): circular mean 360° space","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_mean_rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular mean — circ_mean_rad","text":"","code":"x <- runif(1000, -pi, pi) mean(x) #> [1] 0.01507648 circ_mean_rad(x) #> [1] -2.939368"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/vm_kappa_to_circ_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","title":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","text":"Conversion circular SD kappa von Mises","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/vm_kappa_to_circ_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","text":"","code":"vm_kappa_to_circ_sd(kappa)  vm_kappa_to_circ_sd_deg(kappa)  vm_circ_sd_to_kappa(sd)  vm_circ_sd_deg_to_kappa(sd_deg)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/vm_kappa_to_circ_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","text":"kappa von Mises kappa parameter sd circular SD von Mises (radians) sd_deg circular SD von Mises (degrees)","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/vm_kappa_to_circ_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","text":"vm_kappa_to_circ_sd vm_kappa_to_circ_sd_deg return circular SD (radians degrees, respectively) corresponding given kappa. vm_circ_sd_to_kappa vm_circ_sd_deg_to_kappa return kappa corresponding given circular SD (radians degrees, respectively).","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/vm_kappa_to_circ_sd.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","text":"vm_kappa_to_circ_sd_deg(): get circular SD (degrees) kappa vm_circ_sd_to_kappa(): get kappa circular SD (radians) vm_circ_sd_deg_to_kappa(): get kappa circular SD (degrees)","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/vm_kappa_to_circ_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between the circular SD and kappa of von Mises — vm_kappa_to_circ_sd","text":"","code":"vm_kappa <- 5 vm_sd <- vm_kappa_to_circ_sd(vm_kappa)  vm_circ_sd_to_kappa(vm_sd) #> [1] 5  x <- circular::rvonmises(10000, mu = circular::circular(0), kappa = vm_kappa)  sprintf(\"Expected SD: %.2f, actual SD: %.2f\", vm_sd, circ_sd_rad(x)) #> [1] \"Expected SD: 0.47, actual SD: 0.48\""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","title":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","text":"Provides locally-weighted average independent variable circular depended variable linear. Mainly use ggplot2.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","text":"","code":"circ_loess(   formula = NULL,   data = NULL,   angle = NULL,   y = NULL,   xseq = NULL,   circ_space = NULL,   span = 0.75,   ... )"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","text":"formula formula, e.g., y ~ x data data use angle vector angles (used formula provided) y dependent variable vector (used formula provided) xseq grid compute predictions (optional, default use 500 points spanning circle) circ_space circular space use (90, 180, 360, 2*pi) span span adjust degree smoothing ... arguments (ignored)","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","text":"object circ_loess class following parameters: angle angles data y dependent variable vales data xseq grid loess values estimated y_est estimated loess values y_se standard errors w weights circ_space circular space used span span used","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_loess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","text":"Weights regression computed \\[w = (1-(d/d_{max})^3)^3\\] d angular difference point estimate computed angles data, \\(d_{max}\\) maximum possible distance. span 1, points included \\(d_{max} = {circ\\_space}/(4*span)\\). Otherwise, proportion \\(\\alpha\\) points included based distance point estimate computed \\(d_{max}\\) corresponding maximal distance.","code":""},{"path":[]},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circ_loess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An implementation of circular-linear locally-weighted regression (LOESS)  — circ_loess","text":"","code":"library(ggplot2) p <- ggplot(Pascucci_et_al_2019_data, aes(x = orientation, y = err)) +   geom_point(alpha = 0.05) +   labs(x = \"Orientation, deg.\", y = \"Error, deg.\") p1 <- p + geom_smooth(method = \"loess\") + ggtitle(\"Standard LOESS\") p2 <- p + geom_smooth(method = \"circ_loess\", method.args = list(circ_space = 180, span = 0.5)) +   ggtitle(\"Circular LOESS, span = 0.5\") p3 <- p + geom_smooth(method = \"circ_loess\", method.args = list(circ_space = 180, span = 0.2)) +   ggtitle(\"Circular LOESS, span = 0.2\") (p1 + p2 + p3) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circhelp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"circhelp: Circular Analyses Helper Functions — circhelp-package","title":"circhelp: Circular Analyses Helper Functions — circhelp-package","text":"Light-weight functions computing descriptive statistics different circular spaces (e.g., 2pi, 180, 360 degrees), handle angle-dependent biases, pad circular data, . Specifically aimed psychologists neuroscientists analyzing circular data. Basic methods based Jammalamadaka SenGupta (2001) doi:10.1142/4031 , removal cardinal biases based approach introduced van Bergen, Ma, Pratte, & Jehee (2015) doi:10.1038/nn.4150  Chetverikov Jehee (2023) doi:10.1038/s41467-023-43251-w .","code":""},{"path":[]},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/circhelp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"circhelp: Circular Analyses Helper Functions — circhelp-package","text":"Maintainer: Andrey Chetverikov andrey.chetverikov@uib.(ORCID) contributors: Eline Van Geert eline.vangeert@kuleuven.(ORCID) [contributor]","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/predict.circ_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute predictions for circular LOESS — predict.circ_loess","title":"Compute predictions for circular LOESS — predict.circ_loess","text":"Compute predictions circular LOESS","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/predict.circ_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute predictions for circular LOESS — predict.circ_loess","text":"","code":"# S3 method for class 'circ_loess' predict(object, newdata, ...)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/predict.circ_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute predictions for circular LOESS — predict.circ_loess","text":"object circular LOESS object newdata data.frame variable x predictions computed ... arguments (passed circ_loess)","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/predict.circ_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute predictions for circular LOESS — predict.circ_loess","text":"data.frame predictions","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cardinal biases for data with orientation (color, motion, ...) set in discrete steps — remove_cardinal_biases_discrete","title":"Remove cardinal biases for data with orientation (color, motion, ...) set in discrete steps — remove_cardinal_biases_discrete","text":"Remove cardinal biases data orientation (color, motion, ...) set discrete steps","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cardinal biases for data with orientation (color, motion, ...) set in discrete steps — remove_cardinal_biases_discrete","text":"","code":"remove_cardinal_biases_discrete(err, x, space, init_outliers = NULL)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cardinal biases for data with orientation (color, motion, ...) set in discrete steps — remove_cardinal_biases_discrete","text":"err vector errors, deviations response true stimuli x vector true stimuli degrees (see space) space circular space use (string: 180 360) init_outliers vector determining errors initially assumed outliers (default: NULL)","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/remove_cardinal_biases_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove cardinal biases for data with orientation (color, motion, ...) set in discrete steps — remove_cardinal_biases_discrete","text":"returns data.table following columns: is_outlier - 0 outliers (defined ±3*predicted SD, SD mean computed excluding initially assumed outliers) be_c error corrected biases (be_c = observed error - pred)","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted standard error of the mean (SEM_w) — weighted_sem","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"Computes variance weighted mean following definitions given Kirchner (2006).","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"","code":"weighted_sem(x, w, na.rm = FALSE)"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"x variable compute SEM w weights na.rm NAs removed","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"weighted standard error mean","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"James Kirchner describes two different cases weighted variance computed. code implements Case \"one wants give weight points others, considered important\" \"weights differ uncertainties associated individual xi assumed \" (Kirchner, 2006, p. 1). formula used : \\[SEM_w = \\sqrt{\\left(\\sum_{= 1}^{N} (w_{} x_i^2)-\\bar{x}^2\\right)\\frac{\\sum_{= 1}^{N} w_i^2}{1-\\sum_{= 1}^{N} w_i^2}} \\] expected error within 5% bootstrapped SEM (larger sample sizes).","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"Kirchner, J. 2006. Data Analysis Toolkit #12: Weighted averages uncertainties. https://seismo.berkeley.edu/~kirchner/Toolkits/Toolkit_12.pdf.  Retrieved 04.07.2024. Bevington, P. R. 1969. Data Reduction Error Analysis Physical Sciences. McGraw-Hill, 336 pp.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/weighted_sem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted standard error of the mean (SEM_w) — weighted_sem","text":"","code":"set.seed(1) n_obs <- 200 w <- runif(n_obs) w <- w / sum(w) x <- rnorm(n_obs, sd = 5) weighted_sem(x, w) #> [1] 0.3812216"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute asymmetry in weighted probability density — density_asymmetry","title":"Compute asymmetry in weighted probability density — density_asymmetry","text":"function calculates asymmetry probability density given variable (usually errors) relative another variable (usually dissimilarity) using kernel density estimation. asymmetry computed x-axis value, result can averaged returned value individually.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute asymmetry in weighted probability density — density_asymmetry","text":"","code":"density_asymmetry(   dt,   circ_space = 180,   weights_sd = 10,   kernel_bw = NULL,   xvar = \"abs_td_dist\",   yvar = \"bias_to_distr_corr\",   by = c(),   n = 181,   average = T,   return_full_density = F,   normalize = T )"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute asymmetry in weighted probability density — density_asymmetry","text":"dt data.table data. circ_space Circular space, can 180 360 (default: 180). weights_sd Standard deviation Gaussian window use across xvar (default: 10). kernel_bw Bandwidth kernel density estimator across yvar. NULL, computed using stats::bw.SJ(). \"average\", computed using stats::bw.SJ() group indicated averaged. Otherwise passed stats::density() (default: NULL). xvar X-axis variable, dissimilarity items (default: \"abs_td_dist\"). yvar Y-axis variable, normally errors (default: \"bias_to_distr_corr\"). vector grouping variable names (default: empty vector). n number steps x-axis variable density computed (default: 181). average TRUE, asymmetry averaged x-value (default: TRUE). return_full_density TRUE, returns full data.table density computed point (default: FALSE). normalize TRUE, normalizes difference probability density total sum probability density (zero point excluded). Delta corresponds probability observing given sign. use average TRUE.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute asymmetry in weighted probability density — density_asymmetry","text":"data.table grouping variables, dist - values X-axis variable density computed, delta - difference (asymmetry) probability density positive negative values yvar; full density data return_full_density TRUE.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute asymmetry in weighted probability density — density_asymmetry","text":"","code":"data(Pascucci_et_al_2019_data) ex_data <- Pascucci_et_al_2019_data ex_data[, err := angle_diff_180(reported, orientation)] # response errors #>       observer orientation reported        rt   err #>          <int>       <int>    <int>     <num> <num> #>    1:        1         135      137 1.0829786     2 #>    2:        1          65       56 0.9887931    -9 #>    3:        1          61       65 1.5067748     4 #>    4:        1          27       25 1.9070205    -2 #>    5:        1          22       20 2.0247443    -2 #>   ---                                               #> 4396:       10          35       26 1.7775651    -9 #> 4397:       10         141      135 2.0365374    -6 #> 4398:       10         178      163 1.1301296   -15 #> 4399:       10         168      168 1.3772832     0 #> 4400:       10          24       28 2.3897599     4 ex_data[, prev_ori := shift(orientation), by = observer] # orientation on previous trial #>       observer orientation reported        rt   err prev_ori #>          <int>       <int>    <int>     <num> <num>    <int> #>    1:        1         135      137 1.0829786     2       NA #>    2:        1          65       56 0.9887931    -9      135 #>    3:        1          61       65 1.5067748     4       65 #>    4:        1          27       25 1.9070205    -2       61 #>    5:        1          22       20 2.0247443    -2       27 #>   ---                                                        #> 4396:       10          35       26 1.7775651    -9       68 #> 4397:       10         141      135 2.0365374    -6       35 #> 4398:       10         178      163 1.1301296   -15      141 #> 4399:       10         168      168 1.3772832     0      178 #> 4400:       10          24       28 2.3897599     4      168  # determine the shift in orientations between trials ex_data[, diff_in_ori := angle_diff_180(prev_ori, orientation)] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 ex_data[, abs_diff_in_ori := abs(diff_in_ori)] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 #>       abs_diff_in_ori #>                 <num> #>    1:              NA #>    2:              70 #>    3:               4 #>    4:              34 #>    5:               5 #>   ---                 #> 4396:              33 #> 4397:              74 #> 4398:              37 #> 4399:              10 #> 4400:              36 ex_data[, err_rel_to_prev_targ := ifelse(diff_in_ori < 0, -err, err)] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 #>       abs_diff_in_ori err_rel_to_prev_targ #>                 <num>                <num> #>    1:              NA                   NA #>    2:              70                   -9 #>    3:               4                    4 #>    4:              34                   -2 #>    5:               5                   -2 #>   ---                                      #> 4396:              33                   -9 #> 4397:              74                   -6 #> 4398:              37                   15 #> 4399:              10                    0 #> 4400:              36                   -4  err_dens <- density_asymmetry(ex_data[!is.na(err_rel_to_prev_targ)],   circ_space = 180, weights_sd = 10, xvar = \"abs_diff_in_ori\",   yvar = \"err_rel_to_prev_targ\", by = c(\"observer\") )  library(ggplot2) ggplot(err_dens, aes(x = dist, y = delta)) +   geom_line(stat = \"summary\", fun = mean) +   labs(y = \"Asymmetry in error probability density, %\", x = \"Absolute orientation difference, °\")"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute asymmetry in weighted probability density for discrete data — density_asymmetry_discrete","title":"Compute asymmetry in weighted probability density for discrete data — density_asymmetry_discrete","text":"function calculates asymmetry probability density given variable using kernel density estimation. Unlike density_asymmetry, take xvar assumes asymmetry calculated whole dataset subsets defined (also include discrete x variable needed) .","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute asymmetry in weighted probability density for discrete data — density_asymmetry_discrete","text":"","code":"density_asymmetry_discrete(   dt,   yvar = \"bias_to_distr_corr\",   circ_space = 180,   kernel_bw = NULL,   by = c(),   n = 181,   average = T,   return_full_density = F,   normalize = T )"},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute asymmetry in weighted probability density for discrete data — density_asymmetry_discrete","text":"dt data.table data. yvar Y-axis variable, normally errors (default: \"bias_to_distr_corr\"). circ_space Circular space, can 180 360 (default: 180). kernel_bw Bandwidth kernel density estimator across yvar. NULL, computed using stats::bw.SJ(). \"average\", computed using stats::bw.SJ() group indicated averaged. Otherwise passed stats::density() (default: NULL). vector grouping variable names (default: empty vector). n number steps density computation (default: 181). average TRUE, asymmetry averaged (default: TRUE). return_full_density TRUE, returns full data.table density computed point (default: FALSE). normalize TRUE, normalizes difference probability density total sum probability density (zero point excluded). Delta corresponds probability observing given sign. use average TRUE.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute asymmetry in weighted probability density for discrete data — density_asymmetry_discrete","text":"data.table grouping variables delta - difference (asymmetry) probability density positive negative values yvar; full density data return_full_density TRUE.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/reference/density_asymmetry_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute asymmetry in weighted probability density for discrete data — density_asymmetry_discrete","text":"","code":"data(Pascucci_et_al_2019_data) ex_data <- Pascucci_et_al_2019_data ex_data[, err := angle_diff_180(reported, orientation)] # response errors #>       observer orientation reported        rt   err #>          <int>       <int>    <int>     <num> <num> #>    1:        1         135      137 1.0829786     2 #>    2:        1          65       56 0.9887931    -9 #>    3:        1          61       65 1.5067748     4 #>    4:        1          27       25 1.9070205    -2 #>    5:        1          22       20 2.0247443    -2 #>   ---                                               #> 4396:       10          35       26 1.7775651    -9 #> 4397:       10         141      135 2.0365374    -6 #> 4398:       10         178      163 1.1301296   -15 #> 4399:       10         168      168 1.3772832     0 #> 4400:       10          24       28 2.3897599     4 ex_data[, prev_ori := shift(orientation), by = observer] # orientation on previous trial #>       observer orientation reported        rt   err prev_ori #>          <int>       <int>    <int>     <num> <num>    <int> #>    1:        1         135      137 1.0829786     2       NA #>    2:        1          65       56 0.9887931    -9      135 #>    3:        1          61       65 1.5067748     4       65 #>    4:        1          27       25 1.9070205    -2       61 #>    5:        1          22       20 2.0247443    -2       27 #>   ---                                                        #> 4396:       10          35       26 1.7775651    -9       68 #> 4397:       10         141      135 2.0365374    -6       35 #> 4398:       10         178      163 1.1301296   -15      141 #> 4399:       10         168      168 1.3772832     0      178 #> 4400:       10          24       28 2.3897599     4      168  # determine the shift in orientations between trials ex_data[, diff_in_ori := angle_diff_180(prev_ori, orientation)] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 ex_data[, abs_diff_in_ori := abs(diff_in_ori)] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 #>       abs_diff_in_ori #>                 <num> #>    1:              NA #>    2:              70 #>    3:               4 #>    4:              34 #>    5:               5 #>   ---                 #> 4396:              33 #> 4397:              74 #> 4398:              37 #> 4399:              10 #> 4400:              36 ex_data[, err_rel_to_prev_targ := ifelse(diff_in_ori < 0, -err, err)] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 #>       abs_diff_in_ori err_rel_to_prev_targ #>                 <num>                <num> #>    1:              NA                   NA #>    2:              70                   -9 #>    3:               4                    4 #>    4:              34                   -2 #>    5:               5                   -2 #>   ---                                      #> 4396:              33                   -9 #> 4397:              74                   -6 #> 4398:              37                   15 #> 4399:              10                    0 #> 4400:              36                   -4 ex_data[, similarity_discrete := ifelse(abs_diff_in_ori>45, 'Dissimilar', 'Similar')] #>       observer orientation reported        rt   err prev_ori diff_in_ori #>          <int>       <int>    <int>     <num> <num>    <int>       <num> #>    1:        1         135      137 1.0829786     2       NA          NA #>    2:        1          65       56 0.9887931    -9      135          70 #>    3:        1          61       65 1.5067748     4       65           4 #>    4:        1          27       25 1.9070205    -2       61          34 #>    5:        1          22       20 2.0247443    -2       27           5 #>   ---                                                                    #> 4396:       10          35       26 1.7775651    -9       68          33 #> 4397:       10         141      135 2.0365374    -6       35          74 #> 4398:       10         178      163 1.1301296   -15      141         -37 #> 4399:       10         168      168 1.3772832     0      178          10 #> 4400:       10          24       28 2.3897599     4      168         -36 #>       abs_diff_in_ori err_rel_to_prev_targ similarity_discrete #>                 <num>                <num>              <char> #>    1:              NA                   NA                <NA> #>    2:              70                   -9          Dissimilar #>    3:               4                    4             Similar #>    4:              34                   -2             Similar #>    5:               5                   -2             Similar #>   ---                                                          #> 4396:              33                   -9             Similar #> 4397:              74                   -6          Dissimilar #> 4398:              37                   15             Similar #> 4399:              10                    0             Similar #> 4400:              36                   -4             Similar err_dens_discrete <- density_asymmetry_discrete(ex_data[!is.na(err_rel_to_prev_targ)],   circ_space = 180, yvar = \"err_rel_to_prev_targ\", by = c(\"observer\",\"similarity_discrete\") )  library(ggplot2) ggplot(err_dens_discrete, aes(x = similarity_discrete, y = delta))+ geom_violin() + geom_point() +   labs(y = \"Asymmetry in error probability density, %\", x = \"Previous target\")"},{"path":"https://achetverikov.github.io/circhelp/index.html/news/index.html","id":"circhelp-111","dir":"Changelog","previous_headings":"","what":"circhelp 1.1.1","title":"circhelp 1.1.1","text":"Added density_asymmetry() analyze asymmetry response probabilities.","code":""},{"path":"https://achetverikov.github.io/circhelp/index.html/news/index.html","id":"circhelp-11","dir":"Changelog","previous_headings":"","what":"circhelp 1.1","title":"circhelp 1.1","text":"CRAN release: 2024-07-04 Initial CRAN submission.","code":""}]
